#For this project, I downloaded data for the Spotify top 50 chart of 2021 from Kaggle.
#I then created a table based on this data, and answered questions I came up with using SQL.

#Table created:
CREATE TABLE BIT_DB.Spotifydata (
id integer PRIMARY KEY,
artist_name varchar NOT NULL,
track_name varchar NOT NULL,
track_id varchar NOT NULL,
popularity integer NOT NULL,
danceability decimal(4,3) NOT NULL,
energy decimal(4,3) NOT NULL,
song_key integer NOT NULL,
loudness decimal(5,3) NOT NULL,
song_mode integer NOT NULL,
speechiness decimal(5,4) NOT NULL,
acousticness decimal(6,5) NOT NULL,
instrumentalness decimal(8,7) NOT NULL,
liveness decimal(5,4) NOT NULL,
valence decimal(4,3) NOT NULL,
tempo decimal(6,3) NOT NULL,
duration_ms integer NOT NULL,
time_signature integer NOT NULL )

#This Spotify data .csv was then inserted into the table, and further explored to analyze this information:

#I wanted to see which tracks were danceable based on four categories: Definitely Danceable, Somewhat Danceable, Hardly Danceable, and Not Danceable. 
SELECT track_name,
CASE WHEN danceability>=0.75 
THEN 'Definitely Danceable'
WHEN danceability>=0.50 
THEN 'Somewhat Danceable'
WHEN danceability>=0.50 
THEN 'Hardly Danceable'
ELSE 'Not Danceable'
END AS danceability_rankings
FROM BIT_DB.Spotifydata
ORDER BY danceability asc;

#Next, I wanted to know each artist's name with song popularity between 80 and 90, and a tempo over 100.
SELECT artist_name
FROM BIT_DB.Spotifydata
WHERE popularity 
BETWEEN 80 AND 90
AND tempo>100
